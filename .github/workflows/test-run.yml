name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  smoke-test-on-linux:
    env:
      POETRY_VIRTUALENVS_CREATE: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install "poetry>2.0"
          poetry install --with test

      - name: Run main tests
        run: python -m pytest

  build-and-test:
    env:
      POETRY_VIRTUALENVS_CREATE: false
    runs-on: ${{ matrix.platform }}
    needs: smoke-test-on-linux
    strategy:
      matrix:
        python-version: ['3.12']
        platform: ['windows-latest', 'macos-latest', 'ubuntu-latest']
        include:
          - python-version: '3.9'
            platform: 'ubuntu-latest'
          - python-version: '3.10'
            platform: 'ubuntu-latest'
          - python-version: '3.11'
            platform: 'ubuntu-latest'
          - python-version: '3.13'
            platform: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install "poetry>2.0"
          poetry install --with test

      - name: Run main tests
        run: python -m pytest

  make-package:
    env:
      POETRY_VIRTUALENVS_CREATE: false
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install "poetry>2.0"
          poetry install

      - name: Make package
        run: poetry build

      - name: Archive package as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            ./dist
            ./tests/shieldhit/resources

  test-package:
    runs-on: ubuntu-latest
    strategy:
       matrix:
         python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    needs: make-package
    steps:
      - name: Fetch package as artifacts
        uses: actions/download-artifact@v5
        with:
          name: packages

      - name: Inspect what has been downloaded
        run: | 
          ls -al
          find .

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install package
        run: python3 -m pip install dist/*whl

      - name: Test package
        run: |
         yaptide-converter -h
         yaptide-converter ./tests/shieldhit/resources/project.json
         python3 -m converter.main -h
         python3 -m converter.main ./tests/shieldhit/resources/project.json
